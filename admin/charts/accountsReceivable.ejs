<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BoltCDL | Accounts Receivables</title>

    <link rel="shortcut icon" href="/static/images/thumb.png">
    <link rel="stylesheet" href="/admin/charts/accountsReceivable.css">
</head>
<body>

    <!-- each location has own color for Chart -->
    <% 
        const colorArray = ['#AAAAAA', '#F27878', '#FDC865', '#A2D092', '#F9E960', '#B6D363', '#9CD9E7', '#80B4D9', '#C9A7EB', '#F29D78', '#92D0C5', '#9CA5F4', '#D6A5D4', '#ECBBCC']
    
        function formatDate(textDate) { return textDate ? new Date(textDate).toLocaleDateString('en-US', { timeZone: locals.SCHOOL_DATA.tZONE }) : '-' }
        function formatToPercents(ratio) { return `${percFormat.format(Math.round(ratio * 1000) / 10)}%` }
        
        const usCurrencyFormat = new Intl.NumberFormat('us-US', { style: 'currency', currency: 'USD' })
        const usNumberFormat =  new Intl.NumberFormat('us-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })
        const percFormat =  new Intl.NumberFormat('us-US', { minimumFractionDigits: 1, maximumFractionDigits: 1 })
    %>

    <header>
        <!-- HOME element -->
        <a href="/admin/profile" class="header-left-item">
            <img src="/static/images/logo-small.png" alt="BOLT logo small" class="bolt-home">
            <span class="item-home">Home</span>
        </a>      <!-- header-left-item -->
        <!-- CENTER element -->
        <nav class="header-center-item">
            <div class="nav-left-side">
                <a href="/admin/charts/AR" class="header-nav-item active-item" title="Accounts Receivable">
                    <svg width="25" height="25" viewBox="0 0 25 25">
                        <path d="M15.6456 12.3657C15.2551 12.0587 14.6738 11.8126 13.9165 11.6343L12.2551 11.2427C11.9876 11.1806 11.7697 11.1242 11.588 11.0711C11.4035 11.0242 11.2245 10.9576 11.0542 10.8725C10.9492 10.824 10.8609 10.7455 10.8007 10.6468C10.7404 10.5482 10.7108 10.4338 10.7156 10.3183C10.7104 10.1847 10.7414 10.0521 10.8054 9.93469C10.8694 9.81727 10.9639 9.71933 11.079 9.65124C11.2321 9.55431 11.4009 9.4848 11.5779 9.44582C11.7832 9.40063 11.993 9.37905 12.2032 9.38149C12.5534 9.37109 12.9019 9.43494 13.2257 9.56885L13.2765 9.59368C13.5104 9.70347 13.6973 9.8932 13.8036 10.1287C13.8928 10.3357 14.04 10.5125 14.2274 10.6377C14.4149 10.7629 14.6346 10.8311 14.86 10.8341H14.93C15.1233 10.8343 15.3135 10.7855 15.4828 10.6924C15.6521 10.5992 15.7951 10.4647 15.8984 10.3014C16.0014 10.1409 16.062 9.9569 16.0746 9.76664C16.0873 9.57637 16.0515 9.38601 15.9707 9.21332C15.7672 8.77599 15.4566 8.39709 15.0677 8.11174C14.6172 7.77938 14.1044 7.54103 13.5598 7.41084V7.09707C13.5598 6.79772 13.4409 6.51064 13.2292 6.29898C13.0176 6.08731 12.7305 5.9684 12.4311 5.9684C12.1318 5.9684 11.8447 6.08731 11.6331 6.29898C11.4214 6.51064 11.3025 6.79772 11.3025 7.09707V7.35214C10.5361 7.47743 9.91196 7.75282 9.44356 8.17381C9.11751 8.45764 8.8576 8.80946 8.6821 9.20452C8.50661 9.59958 8.41979 10.0283 8.42776 10.4605C8.42776 11.4661 8.78329 12.2201 9.48532 12.7009C9.86794 12.9661 10.5203 13.2032 11.4774 13.4244L11.6445 13.4628L12.6704 13.6885C12.8962 13.7381 13.0937 13.7867 13.263 13.8386C13.4887 13.9001 13.7062 13.9884 13.9108 14.1016C14.006 14.1527 14.085 14.2293 14.139 14.3228C14.193 14.4163 14.2199 14.523 14.2167 14.6309C14.2167 15.0666 13.9966 15.3454 13.526 15.5102C13.4457 15.5372 13.3639 15.5594 13.281 15.5768C13.0041 15.6309 12.7223 15.6562 12.4402 15.6524C12.1554 15.657 11.8713 15.6224 11.5959 15.5497C11.3399 15.4856 11.1088 15.3464 10.9323 15.1501C10.8584 15.0573 10.7997 14.9533 10.7585 14.842C10.6999 14.6924 10.6117 14.5562 10.499 14.4417C10.3863 14.3273 10.2516 14.2368 10.103 14.1759C9.95433 14.115 9.79488 14.0849 9.63426 14.0874C9.47365 14.0899 9.31522 14.1249 9.16855 14.1904C9.02188 14.2559 8.89002 14.3505 8.78096 14.4685C8.67191 14.5864 8.58791 14.7252 8.53406 14.8766C8.48022 15.0279 8.45763 15.1886 8.46769 15.3489C8.47774 15.5092 8.52022 15.6658 8.59255 15.8093C8.7919 16.2099 9.07937 16.5603 9.43341 16.8341C9.98076 17.2478 10.6222 17.5192 11.3002 17.6242V17.9018C11.3002 18.2011 11.4191 18.4882 11.6308 18.6999C11.8425 18.9116 12.1295 19.0305 12.4289 19.0305C12.7282 19.0305 13.0153 18.9116 13.227 18.6999C13.4386 18.4882 13.5576 18.2011 13.5576 17.9018V17.649C14.3476 17.5226 14.9966 17.2427 15.5 16.8126C15.8447 16.5308 16.1212 16.1746 16.3088 15.7708C16.4964 15.367 16.5904 14.926 16.5835 14.4808C16.5801 13.5677 16.2664 12.8555 15.6456 12.3657Z" />
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M12.5 2.25734C6.84313 2.25734 2.25734 6.84313 2.25734 12.5C2.25734 18.1569 6.84313 22.7427 12.5 22.7427C18.1569 22.7427 22.7427 18.1569 22.7427 12.5C22.7427 6.84313 18.1569 2.25734 12.5 2.25734ZM0 12.5C0 5.59644 5.59644 0 12.5 0C19.4036 0 25 5.59644 25 12.5C25 19.4036 19.4036 25 12.5 25C5.59644 25 0 19.4036 0 12.5Z" />
                    </svg>
                    <span>Accounts Receivable</span>
                </a>
                <a href="/admin/charts/PF" class="header-nav-item" title="Graduation Dynamics">
                    <svg width="25" height="22" viewBox="0 0 25 22">
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M16.6667 1.68919C16.6667 0.896953 17.2272 0 18.2057 0H21.2087C22.1872 0 22.7477 0.896953 22.7477 1.68919V20.6081C22.7477 21.0435 22.3948 21.3964 21.9595 21.3964C21.5241 21.3964 21.1712 21.0435 21.1712 20.6081V1.68919C21.1712 1.63657 21.1583 1.59898 21.1467 1.57658H18.2678C18.2561 1.59898 18.2432 1.63657 18.2432 1.68919V20.6081C18.2432 21.0435 17.8903 21.3964 17.455 21.3964C17.0196 21.3964 16.6667 21.0435 16.6667 20.6081V1.68919Z" />
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M9.45946 7.9955C9.45946 7.20326 10.02 6.30631 10.9985 6.30631H14.0015C14.98 6.30631 15.5405 7.20326 15.5405 7.9955V20.6081C15.5405 21.0435 15.1876 21.3964 14.7523 21.3964C14.3169 21.3964 13.964 21.0435 13.964 20.6081V7.9955C13.964 7.94287 13.9511 7.90529 13.9395 7.88288H11.0605C11.0489 7.90529 11.036 7.94287 11.036 7.9955V20.6081C11.036 21.0435 10.6831 21.3964 10.2477 21.3964C9.81239 21.3964 9.45946 21.0435 9.45946 20.6081V7.9955Z" />
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M2.25225 14.3018C2.25225 13.5096 2.81283 12.6126 3.79129 12.6126H6.79429C7.77275 12.6126 8.33333 13.5096 8.33333 14.3018V20.6081C8.33333 21.0435 7.9804 21.3964 7.54504 21.3964C7.10969 21.3964 6.75676 21.0435 6.75676 20.6081V14.3018C6.75676 14.2492 6.74391 14.2116 6.73225 14.1892H3.85334C3.84168 14.2116 3.82883 14.2492 3.82883 14.3018V20.6081C3.82883 21.0435 3.4759 21.3964 3.04054 21.3964C2.60518 21.3964 2.25225 21.0435 2.25225 20.6081V14.3018Z" />
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M0 20.6081C0 20.1727 0.352929 19.8198 0.788288 19.8198H24.2117C24.6471 19.8198 25 20.1727 25 20.6081C25 21.0435 24.6471 21.3964 24.2117 21.3964H0.788288C0.352929 21.3964 0 21.0435 0 20.6081Z" />
                    </svg>
                    <span>Graduation Dynamics</span>
                </a>
                <a href="/admin/charts/IA" class="header-nav-item" title="Instructors Activity">
                    <svg width="25" height="25" viewBox="0 0 25 25">
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M12.5 2.02206C6.71319 2.02206 2.02206 6.71319 2.02206 12.5C2.02206 18.2868 6.71319 22.9779 12.5 22.9779C18.2868 22.9779 22.9779 18.2868 22.9779 12.5C22.9779 6.71319 18.2868 2.02206 12.5 2.02206ZM0 12.5C0 5.59644 5.59644 0 12.5 0C19.4036 0 25 5.59644 25 12.5C25 19.4036 19.4036 25 12.5 25C5.59644 25 0 19.4036 0 12.5Z" />
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M5.60662 22.1507C5.60662 18.1551 8.62984 14.7978 12.5 14.7978C16.3702 14.7978 19.3934 18.1551 19.3934 22.1507H17.5551C17.5551 19.0396 15.229 16.636 12.5 16.636C9.77099 16.636 7.44485 19.0396 7.44485 22.1507H5.60662Z" />
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M12.5 8.36397C10.7233 8.36397 9.28309 9.80423 9.28309 11.5809C9.28309 13.3575 10.7233 14.7978 12.5 14.7978C14.2767 14.7978 15.7169 13.3575 15.7169 11.5809C15.7169 9.80423 14.2767 8.36397 12.5 8.36397ZM7.44485 11.5809C7.44485 8.789 9.70812 6.52574 12.5 6.52574C15.2919 6.52574 17.5551 8.789 17.5551 11.5809C17.5551 14.3728 15.2919 16.636 12.5 16.636C9.70812 16.636 7.44485 14.3728 7.44485 11.5809Z" />
                    </svg>
                    <span>Instructors Activity</span>
                </a>
            </div>
            <div class="nav-right-side">
                <% if(locals.user) { %>
                    <span class="admin-name"><%= user.name %></span>
                    <span class="admin-separator">|</span>
                    <span class="admin-email"><%= user.location %></span>
                <% } %>
            </div>
        </nav>      <!-- header-center-item -->
        <!-- SIGN OUT element -->
        <form class="header-right-item" action="/admin/logout" method="POST">
            <button type="submit">
                <svg width="25" height="21" viewBox="0 0 25 21">
                    <path d="M10.2041 18.8964C10.2041 18.939 10.2094 19.0454 10.22 19.2156C10.2307 19.3859 10.2333 19.5268 10.228 19.6386C10.2227 19.7503 10.2067 19.8753 10.1802 20.0136C10.1536 20.1519 10.1004 20.2557 10.0207 20.3248C9.94101 20.394 9.83206 20.4286 9.69388 20.4286H4.59184C3.32696 20.4286 2.24543 19.979 1.34726 19.08C0.449086 18.1809 0 17.0983 0 15.8321V4.59643C0 3.33028 0.449086 2.24767 1.34726 1.3486C2.24543 0.449535 3.32696 0 4.59184 0H9.69388C9.83206 0 9.95164 0.0505394 10.0526 0.151618C10.1536 0.252697 10.2041 0.372396 10.2041 0.510714C10.2041 0.553274 10.2094 0.659673 10.22 0.829911C10.2307 1.00015 10.2333 1.14113 10.228 1.25285C10.2227 1.36456 10.2067 1.48958 10.1802 1.6279C10.1536 1.76622 10.1004 1.86996 10.0207 1.93912C9.94101 2.00828 9.83206 2.04286 9.69388 2.04286H4.59184C3.89031 2.04286 3.28975 2.29289 2.79018 2.79297C2.2906 3.29304 2.04082 3.8942 2.04082 4.59643V15.8321C2.04082 16.5344 2.2906 17.1355 2.79018 17.6356C3.28975 18.1357 3.89031 18.3857 4.59184 18.3857H9.56633L9.74968 18.4017L9.93304 18.4496L10.0606 18.5373L10.1722 18.681L10.2041 18.8964ZM25 10.2143C25 10.4909 24.899 10.7303 24.6971 10.9325L16.0236 19.6146C15.8216 19.8168 15.5825 19.9179 15.3061 19.9179C15.0298 19.9179 14.7906 19.8168 14.5886 19.6146C14.3867 19.4125 14.2857 19.1731 14.2857 18.8964V14.3H7.14286C6.8665 14.3 6.62734 14.1989 6.42538 13.9968C6.22343 13.7946 6.12245 13.5552 6.12245 13.2786V7.15C6.12245 6.87336 6.22343 6.63397 6.42538 6.43181C6.62734 6.22965 6.8665 6.12857 7.14286 6.12857H14.2857V1.53214C14.2857 1.25551 14.3867 1.01611 14.5886 0.813951C14.7906 0.611793 15.0298 0.510714 15.3061 0.510714C15.5825 0.510714 15.8216 0.611793 16.0236 0.813951L24.6971 9.49609C24.899 9.69825 25 9.93765 25 10.2143Z" />
                </svg>
            </button>
        </form>     <!-- header-right-item -->
    </header>




    
    <section class="chart-box">

        <% if (locals.locationsData) { %>

            <!-- drawing charts -->
            <% 
                let max = locationsData[0].totalDebt
                let grandTotalDebt = 0

                locationsData.map(data => {
                    if(data.totalDebt > max) { max = data.totalDebt }
                    grandTotalDebt += data.totalDebt
                }) 
            %>
            
            <p class="chart-description">Comparative analysis of receivables</p>
            
            <div class="charts-box">
                <div class="chart">
                    <!-- drawing columns -->
                    <% locationsData.map((data, index) => { %>
                        <% let heightRatio = max ? data.totalDebt / max : 0 %>
                        <div class="chart-column" style="--heightRatio:<%= heightRatio %>;">
                            <div class="chart-column-inner" style="--color:<%= colorArray[index] %>;"></div>
                            <span class="column-value"><%= usCurrencyFormat.format(data.totalDebt) %></span>

                            <span class="column-title">
                                <span class="title-location"><%= data.location %></span>
                                <span class="title-separator">|</span>
                                <span class="title-percent"><%= formatToPercents(grandTotalDebt ? data.totalDebt / grandTotalDebt : 0) %></span>
                            </span>

                        </div>
                    <% }) %>
                </div>
            </div>

            <h2 class="chart-subtitle">Account Receivable Details</h1>
            <p class="chart-subtitle1">Describes the structure of the data that form the above diagram</p>

            <% locationsData.map((data, index) => { %>
                <section class="location-data">
                    <h3 class="location-title" style="--color:<%= colorArray[index] %>;"><%= data.location %></h3>
                    <!-- headers -->
                    <div class="table-header" style="--color:<%= colorArray[index] %>;">
                        <span class="user-name">Student/Applicant</span>
                        <span class="small-title">Student</span>

                        <span class="user-cost">Cost Of Tuition</span>
                        <span class="small-title">Cost</span>

                        <span class="user-paid -hide-if-small">Already Paid</span>
                        <span class="small-title -hide-if-small">Paid</span>

                        <span class="user-debt">Still Owes</span>
                        <span class="small-title">Owes</span>

                        <span class="user-weight">Weight in Total</span>
                        <span class="small-title">Weight</span>

                    </div>

                    <div class="users-table">

                        <% data.users.map(user => { %>
                            <a class="user-name" href="/admin/user/<%= user._id %>?activatetab=3&open=payments"><%= user.name.toLowerCase() %></a>
                            <span class="user-cost"><%= usNumberFormat.format(user.cost) %></span>
                            <span class="user-paid -hide-if-small"><%= usNumberFormat.format(user.paid) %></span>
                            <span class="user-debt"><%= usNumberFormat.format(user.debt) %></span>
                            <span class="user-weight"><%= formatToPercents(data.totalDebt ? user.debt / data.totalDebt : 0) %></span>
                        <% }) %>

                        <span class="total">Total</span>
                        <span class="total-cost"><%= usCurrencyFormat.format(data.totalCost) %></span>
                        <span class="total-paid -hide-if-small"><%= usCurrencyFormat.format(data.totalPaid) %></span>
                        <span class="total-debt"><%= usCurrencyFormat.format(data.totalDebt) %></span>
                        <span class="total-weight">100.0%</span>

                        <span class="average">Average Check</span>
                        <span class="av-cost"><%= usCurrencyFormat.format(data.avCost) %></span>
                        <span class="av-paid -hide-if-small"><%= usCurrencyFormat.format(data.avPaid) %></span>
                        <span class="av-debt"><%= usCurrencyFormat.format(data.avDebt) %></span>
                        <span class="av-weight"></span>

                        <span class="average">Specific Weight</span>
                        <span class="av-cost">100.0%</span>
                        <span class="av-paid -hide-if-small"><%= formatToPercents(data.ratioPaid) %></span>
                        <span class="av-debt"><%= formatToPercents(data.ratioDebt) %></span>
                        <span class="av-weight"></span>
                    </div>
                </section>
            <% }) %>
        <% } else { %>
            <h1>No Data Found...</h1>
        <% } %>
    </section>

    <script type="module" defer>

        // @NOTIFICATIONS from db
        import { io } from "https://cdn.socket.io/4.3.2/socket.io.esm.min.js"
        const socket = io("/")

        socket.on('users-collection-update', data => {
            if (data) {
                document.location.reload()
            }
        })

        socket.on('agreements-update', data => {
            if (data) {
                document.location.reload()
            }
        })

    </script>


    

</body>
</html>